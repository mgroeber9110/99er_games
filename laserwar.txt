   10 RANDOMIZE 
   20 CALL SCREEN ( 5 )  :: CALL CLEAR 
   30 FOR A = 1 TO 12  :: CALL COLOR ( A , 5 , 11 )  :: NEXT A  :: CALL COLOR ( 3 , 7 , 11 , 4 , 7 , 11 ) 
   40 CALL COLOR ( 0 , 3 , 7 ) 
   50 CALL CHAR ( 48 , "007E42426262627E0018080818181818007E42027E60627E007E42023E02627E" ) 
   60 CALL CHAR ( 52 , "004048487C080808007E42407E02627E007E42407E62627E007E420418181818" ) 
   70 CALL CHAR ( 56 , "007E42427E62627E007E42427E02627E" , 59 , "003844BAA2BA4438" ) 
   80 CALL HCHAR ( 1 , 2 , 30 , 31 )  :: CALL VCHAR ( 1 , 32 , 30 , 24 )  :: CALL HCHAR ( 24 , 2 , 30 , 31 )  :: CALL VCHAR ( 1 , 2 , 30 , 24 ) 
   90 DISPLAY AT ( 7 , 1 )  : "BITTE ALPHA-LOCK EINSCHALTEN" 
  100 DISPLAY AT ( 11 , 1 )  : "IST EIN SPEECH-SYNTHESIZER"  :: DISPLAY AT ( 12 , 6 )  : "VORHANDEN (J/N)?" 
  110 ACCEPT AT ( 12 , 23 ) VALIDATE ( "jnJN" ) SIZE ( 1 )  : SP$  :: IF SP$ = "" THEN 110ELSE IF SP$ > "`" THEN SP$ = CHR$ ( ASC ( SP$ ) - 32 ) 
  120 DISPLAY AT ( 14 , 6 )  : "ANLEITUNG (J/N)?"  :: IF SP$ = "J" THEN CALL SAY ( "HELLO,DO YOU NEED INSTRUCTIONS,ENTER J OR N" ) 
  130 ACCEPT AT ( 14 , 23 ) VALIDATE ( "jnJN" ) SIZE ( 1 )  : IN$  :: IF IN$ = "" THEN 130ELSE IF IN$ > "`" THEN IN$ = CHR$ ( ASC ( IN$ ) - 32 ) 
  140 IF IN$ = "J" THEN GOSUB 1300
  150 CALL COLOR ( 9 , 2 , 11 , 12 , 7 , 11 ) 
  160 CALL CLEAR  :: GOSUB 1040 :: PS , CS , RN = 0 
  170 CALL CHAR ( 100 , "FFFFFFFFFFFFFFFF" ) 
  180 CALL CHAR ( 101 , "A599A599A599A599" ) 
  190 CALL CHAR ( 102 , "FFAAAAFF" ) 
  200 CALL CHAR ( 105 , "06063C5E9D244284" ) 
  210 CALL CHAR ( 106 , "60603C7AB9244221" ) 
  220 CALL CHAR ( 107 , "99997E3C3C244224" ) 
  230 CALL CHAR ( 112 , "38183CD8187E7E3C" ) 
  240 CALL CHAR ( 113 , "1C183C1B187E7E3C" ) 
  250 CALL CHAR ( 115 , "1818BD5A187E5A3C" ) 
  260 CALL CHAR ( 123 , "0000007E" ) 
  270 CALL CHAR ( 121 , "08627489A65A5A24542ADAA853A61A66" ) 
  280 FOR Y = 20 TO 24  :: CALL HCHAR ( Y , 2 , 100 , 31 )  :: NEXT Y 
  290 DISPLAY AT ( 21 , 1 )  : "      *SUPER*LASER*WAR*"  :: DISPLAY AT ( 22 , 1 ) 
  300 CALL VCHAR ( 1 , 2 , 100 , 24 ) 
  310 CALL VCHAR ( 1 , 32 , 100 , 24 ) 
  320 CALL HCHAR ( 1 , 2 , 100 , 31 ) 
  330 DISPLAY AT ( 23 , 1 )  : "  SPIELER:"  ; PS  ; TAB ( 15 )  ; "COMPUTER:"  ; CS 
  340 FOR Y = 4 TO 16 STEP 4 
  350 CALL HCHAR ( Y , 3 , 102 , 29 ) 
  360 FOR LTB = 1 TO INT ( RND * 6 ) + 1 
  370 LOCH = INT ( 27 * RND ) + 4  :: CALL VCHAR ( Y , LOCH , 32 )  :: NEXT LTB 
  380 NEXT Y 
  390 AUF = INT ( RND * 27 ) + 4 
  400 CALL VCHAR ( 2 , AUF , 101 , 18 ) 
  410 CALL SPRITE ( # 1 , 105 , 2 , 16 , 17 ) 
  420 CALL SPRITE ( # 2 , 112 , 5 , 16 , 240 ) 
  430 OP = 1  :: CHR = 105  :: XPO = 3  :: XPOC = 31  :: YPO , YPOC = 3  :: ALT , ALTC = 32 
  440 CALL KEY ( 0 , K , S )  :: IF K < > WA THEN 470
  450 CALL SCREEN ( 6 )  :: DISPLAY AT ( 1 , 2 ) SIZE ( 26 )  : "PAUSE - DRUECKE EINE TASTE" 
  460 CALL KEY ( 0 , K , S )  :: IF S < 1 THEN 460ELSE CALL HCHAR ( 1 , 2 , 100 , 31 )  :: CALL SCREEN ( 5 ) 
  470 OC = 0  :: IF OP = 1 THEN PD = SGN ( XPO - XPOC )  :: IF PD = 0 THEN PD = - RI 
  480 IF XPOC + PD > 31 OR XPOC + PD < 3 THEN PD = - PD 
  490 IF PD < > P2 THEN OC = 1  :: CCHR = 112.5 + PD / 2  :: CALL PATTERN ( # 2 , CCHR )  :: CALL SOUND ( 50 , 110 , 6 )  :: P2 = PD 
  500 CALL LOCATE ( # 2 , YPOC * 8 - 8 , XPOC * 8 - 6 ) 
  510 XPOC = XPOC + PD 
  520 CALL GCHAR ( YPOC , XPOC , ALTC ) 
  530 CALL TEST ( 2 , YPOC , XPOC , ALTC , OC )  :: IF OC = 1 THEN CALL PATTERN ( # 2 , CCHR )  :: GOTO 630
  540 IF ABS ( XPO - XPOC ) > 4 OR YPO < > YPOC THEN 630
  550 IF XPO = XPOC AND YPO = YPOC THEN 810
  560 CALL LOCATE ( # 1 , YPO * 8 - 8 , XPO * 8 - 6 , # 2 , YPOC * 8 - 8 , XPOC * 8 - 6 ) 
  570 H = 0  :: S = 300  :: FOR XPG = XPOC + PD TO XPOC + PD * 4 STEP PD  :: CALL GCHAR ( YPOC , XPG , G )  :: IF G < > 32 THEN 590ELSE IF XPG = XPO THEN H = 1  :: GOTO 590
  580 S = S + 20  :: CALL SOUND ( - 10 , S , 5 )  :: CALL VCHAR ( YPOC , XPG , 123 )  :: NEXT XPG 
  590 FOR XPG = XPOC + PD TO XPG - PD STEP PD  :: CALL VCHAR ( YPOC , XPG , 32 )  :: NEXT XPG  :: IF H = 0 THEN 630
  600 CALL EXP ( 1 )  :: CS = CS + 1 
  610 IF SP$ = "J" THEN CALL SAY ( "YOU WERE NOT GOOD.I WON" ) 
  620 GOTO 830
  630 OP = 0  :: IF S = 0 THEN 670
  640 IF K = LE THEN RI = - 1  :: OP = 1  :: CHR = 106 
  650 IF K = RG THEN RI = 1  :: OP = 1  :: CHR = 105 
  660 IF K = FI THEN 740
  670 IF XPO + RI > 31 OR XPO + RI < 3 THEN 440
  680 CALL SOUND ( 100 , - 4 , 4 ) 
  690 XPO = XPO + RI 
  700 CALL GCHAR ( YPO , XPO , ALT )  :: CALL PATTERN ( # 1 , CHR )  :: CALL LOCATE ( # 1 , YPO * 8 - 8 , XPO * 8 - 6 ) 
  710 IF XPO = XPOC AND YPO = YPOC THEN 810
  720 CALL TEST ( 1 , YPO , XPO , ALT , OP )  :: CALL PATTERN ( # 1 , CHR ) 
  730 GOTO 440
  740 OP = 1  :: SG = SGN ( XPO - XPOC )  :: IF RI = 0 OR YPOC < > YPO OR S = - 1 THEN 670
  750 CALL LOCATE ( # 1 , YPO * 8 - 8 , XPO * 8 - 6 , # 2 , YPOC * 8 - 8 , XPOC * 8 - 6 ) 
  760 H = 0  :: S = 300  :: FOR XPG = XPO + RI TO XPO + RI * 7 STEP RI  :: CALL GCHAR ( YPO , XPG , G )  :: IF G < > 32 THEN 780ELSE IF XPG = XPOC THEN H = 1  :: GOTO 780
  770 S = S + 20  :: CALL SOUND ( - 50 , S , 5 )  :: CALL VCHAR ( YPO , XPG , 120 )  :: NEXT XPG 
  780 FOR XPG = XPO + RI TO XPG - RI STEP RI  :: CALL VCHAR ( YPO , XPG , 32 )  :: NEXT XPG  :: IF H = 0 THEN 440
  790 CALL EXP ( 2 )  :: PS = PS + 1  :: IF SP$ = "J" THEN CALL SAY ( "NO NO NO,YOU WON" ) 
  800 GOTO 830
  810 CALL EXP ( 2 )  :: CALL EXP ( 1 ) 
  820 PS = PS + 1  :: CS = CS + 1  :: IF SP$ = "J" THEN CALL SAY ( "NO ONE WON" ) 
  830 CALL DELSPRITE ( ALL )  :: RN = RN + 1  :: IF PS < SSC AND CS < SSC THEN CALL VCHAR ( 2 , AUF , 32 , 18 )  :: GOTO 300
  840 CALL CLEAR 
  850 CALL HCHAR ( 1 , 2 , 30 , 31 )  :: CALL VCHAR ( 1 , 32 , 30 , 24 )  :: CALL HCHAR ( 24 , 2 , 30 , 31 )  :: CALL VCHAR ( 1 , 2 , 30 , 24 ) 
  860 DISPLAY AT ( 5 , 11 )  : "SPIELENDE"  :: DISPLAY AT ( 6 , 11 )  : "fffffffff" 
  870 DISPLAY AT ( 8 , 1 )  : "PUNKTESTAND NACH"  ; RN  ; "RUNDE"  ; CHR$ ( 32 - ( RN > 1 ) * 46 )  ; ":" 
  880 DISPLAY AT ( 10 , 3 )  : "SPIELER :"  ; PS  :: DISPLAY AT ( 11 , 3 )  : "COMPUTER:"  ; CS 
  890 IF PS = CS THEN DISPLAY AT ( 13 , 1 )  : "EIN UNENTSCHIEDEN.........."  :: S$ = "NO ONE"  :: GOTO 910
  900 IF PS < CS THEN DISPLAY AT ( 13 , 1 )  : "ICH HABE GEWONNEN.........."  :: S$ = "COMPUTER" ELSE DISPLAY AT ( 13 , 1 )  : "DU HAST GEWONNEN..........."  :: S$ = "YOU" 
  910 CALL HCHAR ( 15 , 3 , 102 , 29 ) 
  920 IF SP$ = "J" THEN CALL SAY ( "THE END OF THE1 GAMES." & S$ & " WON" ) 
  930 DISPLAY AT ( 17 , 1 )  : "NOCH EIN SPIELCHEN (J/N)?" 
  940 ACCEPT AT ( 17 , 27 ) VALIDATE ( "JN" ) SIZE ( 1 )  : JN$  :: IF JN$ = "" THEN 940
  950 IF JN$ = "J" THEN 160
  960 CALL CLEAR  :: DISPLAY AT ( 11 , 5 )  : "NA,DANN EBEN NICHT..." 
  970 DISPLAY AT ( 13 , 3 )  : "*SUPER*LASER*WAR* VERAB-"  :: DISPLAY AT ( 15 , 3 )  : "SCHIEDET SICH! BIS BALD!" 
  980 IF SP$ = "J" THEN CALL SAY ( "GOOD BYE.YOU WERE A1 GOOD PARTNER" ) 
  990 FOR A = 1 TO 2  :: CALL SOUND ( 100 , 392 , 5 )  :: CALL SOUND ( 100 , 330 , 5 )  :: CALL SOUND ( 100 , 262 , 5 )  :: CALL SOUND ( 200 , 392 , 5 )  :: CALL SOUND ( 200 , 330 , 5 ) 
 1000 CALL SOUND ( 200 , 262 , 5 )  :: NEXT A  :: CALL SOUND ( 650 , 220 , 3 ) 
 1010 FOR D = 1 TO 1000  :: NEXT D 
 1020 END 
 1030 GOTO 1030
 1040 CALL CHAR ( 96 , "000000000000070D0D0D0F1F1F1F1F1F0000000070F8E4E4F8F8645769170A25" ) 
 1050 CALL CHAR ( 100 , "1F0E01010102030E31767838381800FF78F83C5C524ACE898E0A1414283C3EFF" ) 
 1060 CALL CHAR ( 104 , RPT$ ( "0" , 16 ) & "3C70E0428408D8B8" & RPT$ ( "0" , 26 ) ) 
 1070 CALL CHAR ( 108 , "7030" & RPT$ ( "0" , 12 ) & "03020302030203FF" & RPT$ ( "0" , 16 ) & "FF01FF01FF01FFFF" ) 
 1080 CALL CHAR ( 120 , "000055FFAA" & RPT$ ( "0" , 56 ) ) 
 1090 CALL HCHAR ( 1 , 2 , 30 , 31 )  :: CALL VCHAR ( 1 , 32 , 30 , 24 )  :: CALL HCHAR ( 24 , 2 , 30 , 31 )  :: CALL VCHAR ( 1 , 2 , 30 , 24 ) 
 1100 CALL MAGNIFY ( 4 )  :: CALL SPRITE ( # 1 , 96 , 2 , 50 , 25 , # 2 , 100 , 2 , 82 , 25 , # 3 , 104 , 2 , 50 , 57 , # 4 , 108 , 2 , 82 , 57 ) 
 1110 CALL SPRITE ( # 5 , 120 , 9 , 60 , 73 ) 
 1120 FOR A = 1 TO 3  :: CALL LOCATE ( # 5 , 60 , 73 )  :: CALL MOTION ( # 5 , 1 , 80 ) 
 1130 CALL POSITION ( # 5 , Y , X )  :: IF X < 200 THEN 1130ELSE CALL MOTION ( # 5 , 0 , 0 )  :: CALL SOUND ( 300 , - 4 - A , 2 ) 
 1140 IF A = 1 THEN DISPLAY AT ( 5 , 9 )  : "*SUPER*" ELSE IF A = 2 THEN DISPLAY AT ( 7 , 12 )  : "*LASER*" ELSE DISPLAY AT ( 9 , 15 )  : "*WAR*" 
 1150 NEXT A  :: CALL DELSPRITE ( # 5 ) 
 1160 DISPLAY AT ( 16 , 4 )  : "; BY MG-SOFTWARE 1984" 
 1170 DISPLAY AT ( 18 , 5 )  : "FUER SIEG BENOETIGTE"  :: DISPLAY AT ( 20 , 8 )  : "PUNKTZAHL? 10" 
 1180 FOR D = 1 TO 300  :: NEXT D 
 1190 FOR A = 1 TO 2  :: CALL SOUND ( 100 , 262 , 5 )  :: CALL SOUND ( 100 , 330 , 5 )  :: CALL SOUND ( 100 , 392 , 5 )  :: CALL SOUND ( 200 , 262 , 5 )  :: CALL SOUND ( 200 , 330 , 5 ) 
 1200 CALL SOUND ( 200 , 392 , 5 )  :: NEXT A  :: CALL SOUND ( 450 , 523 , 3 ) 
 1210 ACCEPT AT ( 20 , 19 ) SIZE ( - 2 ) VALIDATE ( "0123456789" )  : SC$  :: IF SC$ = "" OR SC$ = "0" OR SC$ = "00" THEN 1210ELSE SSC = VAL ( SC$ ) 
 1220 CALL DELSPRITE ( ALL )  :: CALL MAGNIFY ( 1 )  :: CALL CLEAR  :: DISPLAY AT ( 3 , 4 )  : "BITTE TASTEN DEFINIEREN" 
 1230 DISPLAY AT ( 7 , 1 )  : "LINKS.....S"  :: DISPLAY AT ( 9 , 1 )  : "RECHTS....D"  :: DISPLAY AT ( 11 , 1 )  : "FEUER....."  :: DISPLAY AT ( 13 , 1 )  : "PAUSE.....P" 
 1240 FOR A = 0 TO 3 
 1250 ACCEPT AT ( 7 + A * 2 , 11 ) SIZE ( - 1 ) VALIDATE ( UALPHA , DIGIT , "=/;., " )  : K$ ( A )  :: IF K$ ( A ) = "" THEN K$ ( A ) = " " 
 1260 NEXT A  :: LE = ASC ( K$ ( 0 ) )  :: RG = ASC ( K$ ( 1 ) )  :: FI = ASC ( K$ ( 2 ) )  :: WA = ASC ( K$ ( 3 ) ) 
 1270 DISPLAY AT ( 15 , 1 )  : "TASTEN O.K. (J/N)?" 
 1280 ACCEPT AT ( 15 , 20 ) SIZE ( 1 ) VALIDATE ( "JN" )  : JN$  :: IF JN$ = "" THEN 1280ELSE IF JN$ = "N" THEN 1240
 1290 CALL CLEAR  :: RETURN 
 1300 CALL CLEAR  :: PRINT  :  :  :  : "      *SUPER*LASER*WAR*" 
 1310 PRINT  :  : "    ; BY MG-SOFTWARE 1984" 
 1320 PRINT  : "WILLKOMMEN,WELTRAUMREBELL!. DU HAST ES GERADE NOCH GE-  SCHAFFT,DICH VOR DEM KAMPF- ROBOTER,DER DIR FOLGT,IN DIE" 
 1330 PRINT "REAKTORZENTRALE DER BASIS   ZU FLUECHTEN.DOCH NUN HAT ERDEINE SPUR WIEDER AUFGENOM- MEN.DU HAST IHN ABER MIT DEM" 
 1340 PRINT "BLASTER GESTREIFT,SO DASS   SEIN "SUCHKOPF" NICHT MEHR  PERFEKT ARBEITET.UND GENAU  DARIN LIEGT DEINE CHANCE..." 
 1350 PRINT  : TAB ( 25 )  ; ">>>"  :  : 
 1360 IF SP$ = "J" THEN CALL SAY ( "PRESS A1 KEY TO GO ON." ) 
 1370 CALL KEY ( 0 , K , S )  :: IF S = 0 THEN 1370
 1380 CALL CLEAR  :: PRINT  :  :  :  : "NUN HAT DER ROBOTER DICH AUFEINEM GERUEST GESTELLT.NUR  MIT EINEM BLASTER BEWAFFNET,"  ; 
 1390 PRINT "MUSST DU IHNE AUFHALTEN.ABERKAMPFROBOTER SIND ZAEH,DENN WENN DU EINEN GETROFFEN     HAST,KOMMT SOFORT EIN NEUER." 
 1400 PRINT "AUSSERDEM AENDERT SICH DAS  GE-RUEST.FUER JEDEN TREFFER BEKOMMEN DU ODER DER ROBOTEREINE PUNKT." 
 1410 PRINT "NACH FESTGESETZTER PUNKTZAHLIST DAS SPIEL ZU ENDE.DU BE-WEGST DEINE FIGUR DURCH VOR-HER FESTGELEGTE TASTEN." 
 1420 PRINT  : TAB ( 25 )  ; ">>>"  :  :  : 
 1430 IF SP$ = "J" THEN CALL SAY ( "PRESS A1 KEY TO GO ON" ) 
 1440 CALL KEY ( 0 , K , S )  :: IF S = 0 THEN 1440
 1450 CALL CLEAR 
 1460 PRINT  :  :  :  :  :  : "MIT DER PAUSE-TASTE KANN MANDAS SPIEL UNTERBRECHEN,BIS  EINE TASTE GEDRUECKT WIRD.  DURCH DIE LOECHER IM LABY-" 
 1470 PRINT "RINTHBODEN FAELLRT MAN EINE EBENE TIEFER.DER LIFT BE-   FOERDERT EINEN AUF DIE OBER-STE EBENE." 
 1480 PRINT "KOMMST DU DEM COMPUTER ZU   NAHE,SO VERNICHTET ER SICH  UND DICH.IHR ERHALTET BEIDE EINEN PUNKT." 
 1490 PRINT  : TAB ( 25 )  ; ">>>"  :  :  :  :  :  : 
 1500 IF SP$ = "J" THEN CALL SAY ( "PRESS ANY KEY TO START" ) 
 1510 CALL KEY ( 0 , K , S )  :: IF S = 0 THEN 1510
 1520 RETURN 
 1530 GOTO 1530
 1540 SUB TEST ( S , YP , XP , GC , OP ) 
 1550 IF GC < > 101 THEN 1600
 1560 IF YP = 3 THEN SUBEXIT 
 1570 CALL SOUND ( 500 , - 1 , 2 ) 
 1580 CALL PATTERN ( # S , 99 + S * 8 )  :: OP = 1  :: FOR FALL = YP TO 3 STEP - 1 
 1590 CALL LOCATE ( # S , FALL * 8 - 8 , XP * 8 - 6 )  :: NEXT FALL  :: YP = 3  :: SUBEXIT 
 1600 CALL GCHAR ( YP + 1 , XP , GCH ) 
 1610 IF GCH < > 32 THEN SUBEXIT 
 1620 OP = 1  :: CALL PATTERN ( # S , 99 + S * 8 ) 
 1630 CALL LOCATE ( # S , YP * 8 - 8 , XP * 8 - 6 )  :: CALL GCHAR ( YP + 1 , XP , G )  :: IF G = 32 THEN YP = YP + 1  :: GOTO 1630
 1640 CALL SOUND ( 30 , - 7 , 2 ) 
 1650 SUBEND 
 1660 SUB EXP ( S ) 
 1670 CALL COLOR ( # S , 7 )  :: FOR A = 1 TO 6  :: CALL SCREEN ( 10 )  :: CALL PATTERN ( # S , 121 )  :: CALL SOUND ( - 200 , - 5 , 2 )  :: FOR D = 1 TO 30  :: NEXT D 
 1680 CALL SCREEN ( 15 )  :: CALL PATTERN ( # S , 122 )  :: CALL SOUND ( - 200 , - 7 , 2 )  :: FOR D = 1 TO 30  :: NEXT D  :: NEXT A 
 1690 CALL SCREEN ( 5 )  :: CALL DELSPRITE ( # S ) 
 1700 SUBEND 
